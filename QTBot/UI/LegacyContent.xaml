<UserControl x:Class="QTBot.LegacyContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QTBot"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <TabControl 
            Style="{DynamicResource MaterialDesignNavigatilRailTabControl}"
            >
            <!-- Home -->
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Home" />
                    </StackPanel>
                </TabItem.Header>
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel MaxWidth="800">
                        <StackPanel x:Name="ConfigCheck" Grid.Column="0" HorizontalAlignment="Center" Margin="2,0,0,0" Background="#FFFFA0A0" >
                            <TextBlock TextAlignment="Center" FontWeight="Bold" TextWrapping="Wrap">***The configuration file was not setup properly***</TextBlock>
                            <TextBlock TextAlignment="Center" TextWrapping="Wrap">Please make sure to fill the config.json file with all needed information.</TextBlock>
                        </StackPanel>
                        <StackPanel Grid.Column="0" Margin="12" HorizontalAlignment="Center">
                            <Button x:Name="Connect" Click="OnConnectClick" FontSize="16" Margin="0,12,0,0" MinWidth="300">Connect</Button>
                            <TextBlock FontSize="16" FontWeight="Bold">Status</TextBlock>
                            <TextBlock x:Name="ConnectionStatus" Margin="0,12" FontWeight="Bold" FontSize="14">Not connected</TextBlock>
                            <TextBlock x:Name="CurrentStreamerText">name</TextBlock>
                            <TextBlock x:Name="CurrentBotText">name</TextBlock>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>
            <!-- Setup -->
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Setup" />
                    </StackPanel>
                </TabItem.Header>
                <StackPanel MaxWidth="800">
                    <StackPanel x:Name="ConfigCheck1" Grid.Column="0" HorizontalAlignment="Center" Margin="2,0,0,0" Background="#FFFFA0A0" >
                        <TextBlock TextAlignment="Center" FontWeight="Bold" TextWrapping="Wrap">***The configuration file was not setup properly***</TextBlock>
                        <TextBlock TextAlignment="Center" TextWrapping="Wrap">Please make sure to fill the config.json file with all needed information.</TextBlock>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock TextAlignment="Center" FontSize="16" FontWeight="Bold" TextWrapping="Wrap">Streamer account info</TextBlock>
                        <TextBox Background="Transparent"
                                 BorderThickness="0"
                                 IsReadOnly="True"
                                 TextWrapping="Wrap"
                                 AcceptsReturn="True"
                                 Padding="0"
                                 Text=" 1- The streamer user name is the Twitch account from which you are streaming. &#x0a; 2- To generate the access token, refresh token, and client id, go to https://twitchtokengenerator.com/ &#x0a; 3- Select 'Custom Scope Token', scroll down and click the 'Select All' option. Then click 'Generate Token'! &#x0a; 4- Scroll back up and copy the values into the config.json file.">

                        </TextBox>

                        <TextBlock TextAlignment="Center" FontSize="16" FontWeight="Bold" TextWrapping="Wrap">Bot account info</TextBlock>
                        <TextBox Background="Transparent"
                                 BorderThickness="0"
                                 IsReadOnly="True"
                                 TextWrapping="Wrap"
                                 AcceptsReturn="True"
                                 Padding="0"
                                 Text=" 1- This is the account from which the bot will post to your chat, you can use your own account or create a separate account. &#x0a; 2- To generate the oauth token, go to https://twitchapps.com/tmi/ &#x0a; 3- Connect with your account and copy the oauth password to the config.json file. &#x0a;">

                        </TextBox>
                    </StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" HorizontalAlignment="Center" Margin="12">
                            <Button Content="Open configuration file folder" Click="OnOpenConfigClick"  HorizontalAlignment="Center" Margin="0,12,0,2" MinWidth="135"/>
                            <Button Content="Reload configuration file" Click="OnReloadConfigClick" Margin="0,2" MinWidth="135"/>
                            <Button x:Name="TestMessage" Click="OnTestMessageClick" Margin="0,2" MinWidth="135">Send test message</Button>
                            <Button x:Name="TestRedeem1" Click="TestRedeem1_Click" Margin="0,2" MinWidth="135">Send test redeem 1</Button>
                            <Button x:Name="TestRedeem2" Click="TestRedeem2_Click" Margin="0,2" MinWidth="135">Send test redeem 2</Button>

                        </StackPanel>
                    </Grid>

                </StackPanel>

            </TabItem>
            <!-- End Setup -->
            <!-- Events -->
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Events" />
                    </StackPanel>
                </TabItem.Header>
                <ScrollViewer>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="8"/>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Button x:Name="SaveButton" Grid.Column="3" Content="Save" Click="OnSaveButtonClick"/>

                        <!-- Channel redeems -->
                        <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center">Channel points redemptions</TextBlock>

                        <CheckBox x:Name="IsRedemptionInChatBox" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" IsChecked="{Binding IsRedemptionInChat}"/>
                        <TextBlock Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center">Show redemption in chat</TextBlock>

                        <CheckBox x:Name="IsTagUserBox" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <TextBlock x:Name="IsTagUserLabel" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center">Tag user in chat when there's a redeem: @</TextBlock>
                            <TextBox x:Name="UserNameTextBox" MinWidth="150" ToolTip="@username"/>
                        </StackPanel>

                        <!-- Auto shout out -->
                        <TextBlock Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,12,0,0">Auto shout out on raid</TextBlock>
                        <CheckBox x:Name="IsAutoShoutOutBox" Grid.Row="5" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="5" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center">Automatically send shouthout (!so) command when someone raids the channel</TextBlock>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <!-- End Events -->
            <!-- Commands -->
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Commands" />
                    </StackPanel>
                </TabItem.Header>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">Nothing here yet! 0w0</TextBlock>
            </TabItem>
            <!-- End Commands -->
        </TabControl>
    </Grid>
</UserControl>
