<UserControl x:Class="QTBot.UI.Views.Events"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QTBot.UI.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Reload & Save -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="ReloadButton" Width="100" Content="Reload" Click="ReloadButtonClick" Margin="4" HorizontalAlignment="Right"/>
                <Button x:Name="SaveButton" Width="100" Content="Save" Click="OnSaveButtonClick" Margin="16" HorizontalAlignment="Right"/>
            </StackPanel>
            
            <!-- Legacy Events -->
            <Button Grid.Row="1" FontWeight="Bold" HorizontalAlignment="Left" Margin="12"  Width="200" Click="LegacyEventToggleClick">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" FontSize="16" Margin="12,0">Special Events</TextBlock>
                    <materialDesign:PackIcon x:Name="LegacyEventToggleIcon" Kind="ExpandMore" VerticalAlignment="Center" Height="24" Width="24"/>
                </StackPanel>
            </Button>

            <Line Grid.Row="2" X1="0" X2="2000" Margin="0" Stroke="{DynamicResource MaterialDesignDarkForeground}"/>

            <StackPanel x:Name="LegacyEventContainer" Grid.Row="3" Visibility="Collapsed" Margin="48,12,48,24">
                <!-- Channel redeems -->
                <TextBlock FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center">Smart channel points redemptions alerts (grouped redeems with delay)</TextBlock>
                <StackPanel Orientation="Horizontal">
                    <ToggleButton x:Name="IsRedemptionInChatBox" VerticalAlignment="Center" Margin="12"/>
                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center">Show redemption in chat</TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" IsEnabled="{Binding ElementName=IsRedemptionInChatBox, Path=IsChecked}">
                    <ToggleButton x:Name="IsTagUserBox" VerticalAlignment="Center" Margin="12"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="IsTagUserLabel" HorizontalAlignment="Left" VerticalAlignment="Center">Tag user in chat when there's a redeem: @</TextBlock>
                        <TextBox x:Name="UserNameTextBox" MinWidth="150" Height="24" ToolTip="@username"/>
                    </StackPanel>
                </StackPanel>

                <!-- Auto shout out -->
                <TextBlock FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,12,0,0">Delayed shout out on raid</TextBlock>
                <StackPanel Orientation="Horizontal">
                    <ToggleButton x:Name="IsAutoShoutOutBox" VerticalAlignment="Center" Margin="12"/>
                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center">Automatically send shout out (!so) command when someone raids the channel after 5s</TextBlock>
                </StackPanel>
                
                <!-- Greeting message -->
                <TextBlock FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,12,0,0">Custom bot connecting message</TextBlock>
                <TextBox x:Name="GreetingMessage" >Hai hai, I'm connected and ready to go!</TextBox>

            </StackPanel>

            <Line Grid.Row="4" X1="0" X2="2000" Margin="0" Stroke="{DynamicResource MaterialDesignDarkForeground}"/>

            <!-- Custom Events -->
            <Button Grid.Row="4" FontWeight="Bold" HorizontalAlignment="Left" Margin="12" Width="200" Click="CustomEventToggleClick">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" FontSize="16" Margin="12,0">Custom Events</TextBlock>
                    <materialDesign:PackIcon x:Name="CustomEventToggleIcon" Kind="ExpandMore" VerticalAlignment="Center" Height="24" Width="24"/>
                </StackPanel>
            </Button>

            <Grid x:Name="CustomEventsContainer" Visibility="Collapsed" Grid.Row="5">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Margin="48,0,48,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Text="Active" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Text="Type" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <TextBlock Grid.Column="2" Text="Message" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Button Grid.Column="2" Grid.ColumnSpan="2" Margin="16" HorizontalAlignment="Right" Click="HelpButtonClick">Help</Button>
                    <Line Grid.Row="1" X1="0" X2="2000" Grid.ColumnSpan="4" Stroke="{DynamicResource MaterialDesignDarkForeground}"/>
                </Grid>
                
                <ListView x:Name="EventsListView" 
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    Margin="48,0,48,0"
                    Grid.Row="1"
                          PreviewMouseWheel="OnListViewScroll"
                    ItemsSource="{Binding EventsList}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Padding" Value="16" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border
                                             BorderBrush="Transparent"
                                             BorderThickness="0"
                                             Background="{TemplateBinding Background}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="2*"/>
                                                    <ColumnDefinition Width="5*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <StackPanel Grid.Column="0" Margin="12" HorizontalAlignment="Center">
                                                    <TextBlock Visibility="{Binding IsInvalid, Converter={StaticResource BoolToVisibility}}"
                                                        FontSize="30"
                                                        Foreground="Firebrick"
                                                        TextAlignment="Center">
                                                         <materialDesign:PackIcon Kind="AlertCircleOutline"/>
                                                    </TextBlock>
                                                    <ToggleButton IsChecked="{Binding Active}" Height="40"/>
                                                </StackPanel>
                                                <ComboBox Grid.Column="1"
                                                    ItemsSource="{Binding EventTypeEnumToString}" 
                                                    DisplayMemberPath="Value"
                                                    SelectedValuePath="Key"
                                                    SelectedValue="{Binding Type, Mode=TwoWay}"
                                                    SelectionChanged="EventTypeComboBoxChanged"
                                                    Margin="12"
                                                    >
                                                </ComboBox>
                                                <Grid Grid.Column="2" VerticalAlignment="Center">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="4*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" Margin="8">Message: </TextBlock>
                                                    <TextBlock Grid.Row="1" VerticalAlignment="Center" 
                                                               HorizontalAlignment="Right" Margin="8"
                                                               Visibility="{Binding Path=IsOptionNeeded, Converter={StaticResource BoolToVisibility}}">Name: </TextBlock>
                                                    <TextBox Grid.Column="1" Text="{Binding Message}" VerticalAlignment="Center" TextWrapping="Wrap"
                                                             TextChanged="TextBoxTextChanged"/>
                                                    <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Option}" VerticalAlignment="Center" 
                                                             TextWrapping="Wrap" TextChanged="TextBoxTextChanged" 
                                                             Visibility="{Binding Path=IsOptionNeeded, Converter={StaticResource BoolToVisibility}}"/>
                                                </Grid>

                                                <Button Grid.Column="3" Margin="12" Background="Firebrick" Foreground="White" Click="DeleteEventClick">
                                                    <materialDesign:PackIcon Kind="TrashCanOutline" />
                                                </Button>

                                                <Line X1="0" X2="2000" Grid.ColumnSpan="4" Stroke="{DynamicResource MaterialDesignDarkForeground}"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
                <Button Grid.Row="2" Style="{DynamicResource MaterialDesignFloatingActionButton}" Margin="16" Content="{materialDesign:PackIcon Plus}" ToolTip="Add a new event" Click="AddNewEventButtonClick"/>
            </Grid>
        </Grid>
    </ScrollViewer>
</UserControl>
